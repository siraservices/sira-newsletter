#!/usr/bin/env node

import chalk from 'chalk';
import { checkForUnsubscribes, getUnsubscribeReport } from '../utils/unsubscribe-notifier.js';
import subscriberDB from '../database/subscribers.js';

console.log(chalk.bold.blue('\nüìä Unsubscribe Monitor\n'));
console.log(chalk.dim('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n'));

async function checkUnsubscribes() {
  try {
    console.log(chalk.yellow('Checking for unsubscribes...\n'));
    
    // Get current stats
    const stats = subscriberDB.getStats();
    console.log(chalk.bold('üìà Current Subscriber Statistics:'));
    console.log(chalk.cyan(`‚Ä¢ Total Subscribers: ${stats.total}`));
    console.log(chalk.cyan(`‚Ä¢ Active Subscribers: ${stats.active}`));
    console.log(chalk.cyan(`‚Ä¢ Unsubscribed: ${stats.unsubscribed}`));
    
    if (stats.unsubscribed > 0) {
      console.log(chalk.red(`\n‚ö†Ô∏è  ${stats.unsubscribed} people have unsubscribed`));
      
      // Calculate rates
      const unsubscribeRate = stats.total > 0 ? Math.round((stats.unsubscribed / stats.total) * 100) : 0;
      const subscriptionRate = stats.total > 0 ? Math.round((stats.active / stats.total) * 100) : 0;
      
      console.log(chalk.yellow(`‚Ä¢ Unsubscribe Rate: ${unsubscribeRate}%`));
      console.log(chalk.green(`‚Ä¢ Active Rate: ${subscriptionRate}%`));
      
      // Send notification if there are unsubscribes
      console.log(chalk.yellow('\nüìß Sending unsubscribe notification...'));
      await checkForUnsubscribes();
      console.log(chalk.green('‚úÖ Notification sent to admin email'));
      
    } else {
      console.log(chalk.green('\n‚úÖ No unsubscribes detected'));
    }
    
    // Show detailed report
    console.log(chalk.bold('\nüìä Detailed Report:'));
    const report = getUnsubscribeReport();
    if (report) {
      console.log(report.report);
    }
    
  } catch (error) {
    console.error(chalk.red('\n‚ùå Error checking unsubscribes:'), error.message);
  }
}

checkUnsubscribes();
